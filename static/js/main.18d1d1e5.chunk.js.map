{"version":3,"sources":["assets/img/backgroundAuth.jpg","serviceWorker.js","includes/jquery.js","includes/popper.js","redux/constanst.js","redux/actions/authActionsCreators.js","components/LoginForm.component.jsx","pages/AuthPage.component.jsx","redux/actions/usersActionsCreators.js","components/UsersCollection.jsx","pages/UsersPage.component.jsx","pages/EditUserPage.component.jsx","components/Header.component.jsx","components/spinner/Spinner.component.jsx","App.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/reducers/loadingReducer.js","redux/reducers/usersReducer.js","redux/middlewares.js","index.js","redux/configureStore.js"],"names":["module","exports","Boolean","window","location","hostname","match","jQuery","$","Popper","API","logoutUser","localStorage","removeItem","type","setUserInfo","response","userInfo","username","token","is_active","setItem","JSON","stringify","payload","connect","dispatch","dispatchLoginAction","password","onSuccess","onError","data","method","url","success","postProcessSuccess","postProcessError","loginUser","useState","login","setLogin","setPassword","error","setError","isFormInvalid","updateErrorsFlags","errObj","trim","onSubmit","event","preventDefault","toast","className","data-uk-icon","id","name","placeholder","value","autoComplete","onChange","e","target","LoginBackground","backgroundImage","backgroundAuth","AuthPage","data-uk-height-viewport","style","addUser","user","setAllUsers","updateUser","userId","removeUser","dispatchDeleteAction","deleteUserById","users","selectedUser","setSelectedUser","map","key","to","first_name","length","last_name","href","onClick","modal","handleOnDelete","message","Modal","tabIndex","role","data-dismiss","state","loading","dispatchFetchAllUsersAction","useEffect","dispatchCreateUserAction","createUser","dispatchUpdateUserAction","updateUserById","dispatchGetUserByIdAction","getUserById","history","setUserName","setFirstName","setLastName","setIsActive","params","usernameErrorMessage","passwordErrorMessage","replace","pattern","Header","userName","isActive","onLogout","isLoading","dispatchLogoutAction","position","autoClose","hideProgressBar","transition","Slide","exact","path","component","UsersPage","EditUserPage","defaultState","getItem","INITIAL_STATE","parse","rootReducer","combineReducers","action","concat","filter","apiMiddleware","getState","next","AUTH_TOKEN","axios","defaults","headers","common","then","catch","err","status","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","configureStore","UIkit","use","Icons","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.18d1d1e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backgroundAuth.1610a0ff.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import * as $ from 'jquery';\n\nwindow.jQuery = window.$ = $;","import Popper from 'popper.js';\n\nwindow.Popper = Popper;\n","export const API = 'API';\nexport const SET_USER_INFO = 'SET_USER_INFO';\nexport const TOGGLE_LOADER = 'TOGGLE_LOADER';\nexport const RESET_USER_INFO = 'RESET_USER_INFO';\n\nexport const SET_ALL_USERS = 'SET_ALL_USERS';\nexport const ADD_USER = 'ADD_USER';\nexport const REMOVE_USER = 'REMOVE_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\n\n","import { API, RESET_USER_INFO, SET_USER_INFO } from '../constanst';\n\nexport const loginUser = (data, onSuccess, onError) => (\n  {\n    type: API,\n    payload: {\n      method: 'POST',\n      url: '/api-token-auth/',\n      data,\n      success: (response) => (setUserInfo(response, data)),\n      postProcessSuccess: onSuccess,\n      postProcessError: onError,\n    },\n  });\n\nexport const logoutUser = () => {\n  localStorage.removeItem('USER_INFO');\n  return { type: RESET_USER_INFO };\n};\n\n\nconst setUserInfo = (response, { username }) => {\n  const userInfo = {\n    username,\n    token: response.token,\n    is_active: true,\n  };\n  localStorage.setItem('USER_INFO', JSON.stringify(userInfo));\n  return { type: SET_USER_INFO, payload: userInfo };\n};","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\n\n\nimport { loginUser } from '../redux/actions/authActionsCreators';\n\nconst LoginForm = ({ dispatchLoginAction }) => {\n\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState({ login: false, password: false });\n\n  const handleOnSubmit = (event) => {\n    event.preventDefault();\n\n    if (isFormInvalid()) updateErrorsFlags();\n\n    dispatchLoginAction(login, password,\n      () => toast.success('Авторизация выполнена!'),\n      () => toast.error(`Ошибка: Неверное имя или пароль`));\n  };\n\n  const isFormInvalid = () => (!login || !password);\n\n  const updateErrorsFlags = () => {\n    const errObj = { login: false, password: false };\n    if (!login.trim()) errObj.login = true;\n    if (!password.trim()) errObj.password = true;\n    setError(errObj);\n  };\n\n  return (\n      <form onSubmit={handleOnSubmit}>\n        <div className=\"uk-margin\">\n          <div className=\"uk-inline\">\n            <span className=\"uk-form-icon\" data-uk-icon=\"icon: user\"/>\n            <input id=\"login\"\n                   type=\"text\"\n                   name=\"login\"\n                   placeholder=\"Введите логин\"\n                   value={login}\n                   autoComplete=\"off\"\n                   onChange={(e) => setLogin(e.target.value)}\n                   className={`uk-input ${error.login ? 'uk-form-danger' : ''}`}/>\n          </div>\n        </div>\n        <div className=\"uk-margin\">\n          <div className=\"uk-inline\">\n            <span className=\"uk-form-icon\" data-uk-icon=\"icon: lock\"/>\n            <input id=\"password\"\n                   type=\"password\"\n                   name=\"password\"\n                   placeholder=\"Введите пароль\"\n                   value={password}\n                   onChange={(e) => setPassword(e.target.value)}\n                   className={`uk-input ${error.password ? 'uk-form-danger' : ''}`}/>\n          </div>\n        </div>\n        <div className=\"uk-flex uk-flex-center\">\n          <button type=\"submit\" className=\"uk-button uk-button-default\">\n            Войти | <span className=\"uk-margin-small-left uk-icon-link\" data-uk-icon=\"sign-in\"/>\n          </button>\n        </div>\n      </form>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchLoginAction: (username, password, onSuccess, onError) =>\n    dispatch(loginUser({ username, password }, onSuccess, onError)),\n});\nexport default connect(null, mapDispatchToProps)(LoginForm);\n","import React from 'react';\n\nimport LoginForm from '../components/LoginForm.component';\nimport backgroundAuth from '../assets/img/backgroundAuth.jpg'\n\nconst LoginBackground = {\n  backgroundImage: `url(${backgroundAuth})`,\n};\nconst AuthPage = () => (\n  <div className=\"uk-background-secondary uk-flex uk-height-viewport uk-light uk-background-cover\"\n       data-uk-height-viewport=\"true\"\n       style={LoginBackground}>\n    <div className=\"uk-margin-auto uk-margin-auto-vertical\">\n      <LoginForm/>\n    </div>\n  </div>\n);\n\nexport default AuthPage;\n","import { ADD_USER, API, REMOVE_USER, SET_ALL_USERS, UPDATE_USER } from '../constanst';\n\nexport const fetchAllUsers = () => ({\n    type: API,\n    payload: {\n      method: 'GET',\n      url: '/api/v1/users/',\n      success: (response) => (setAllUsers(response)),\n    },\n  }\n);\n\nexport const createUser = (data, onSuccess, onError) => ({\n  type: API,\n  payload: {\n    method: 'POST',\n    url: '/api/v1/users/',\n    data,\n    success: (user) => (addUser(user)),\n    postProcessSuccess: onSuccess,\n    postProcessError: onError,\n  },\n});\n\nexport const getUserById = (userId, onSuccess) => ({\n  type: API,\n  payload: {\n    method: 'GET',\n    url: `/api/v1/users/${userId}/`,\n    postProcessSuccess: onSuccess,\n  },\n});\n\nexport const updateUserById = (userId, data, onSuccess, onError) => ({\n  type: API,\n  payload: {\n    method: 'PUT',\n    url: `/api/v1/users/${userId}/`,\n    data,\n    success: (userId, data) => (updateUser(userId, data)),\n    postProcessSuccess: onSuccess,\n    postProcessError: onError,\n  },\n});\n\nexport const deleteUserById = (userId, onSuccess, onError) => ({\n  type: API,\n  payload: {\n    method: 'DELETE',\n    url: `/api/v1/users/${userId}/`,\n    success: () => (removeUser(userId)),\n    postProcessSuccess: onSuccess,\n    postProcessError: onError,\n  },\n});\n\nconst addUser = (user) => ({\n  type: ADD_USER,\n  payload: user,\n});\n\nconst setAllUsers = (data) => {\n  return ({\n    type: SET_ALL_USERS,\n    payload: data,\n  });\n};\n\nconst updateUser = (userId, data) => ({\n  type: UPDATE_USER,\n  payload: { userId, data },\n});\n\nconst removeUser = (userId) => ({\n  type: REMOVE_USER,\n  payload: userId,\n});","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { deleteUserById } from '../redux/actions/usersActionsCreators';\n\nconst UsersCollection = ({ users, dispatchDeleteAction }) => {\n\n  const [selectedUser, setSelectedUser] = useState('');\n\n  const showConfirmationModal = (event, userId) => {\n    event.preventDefault();\n    setSelectedUser(userId);\n    window.$('#confirmationModal').modal('show');\n  };\n\n  const handleOnDelete = () => {\n    dispatchDeleteAction(selectedUser, () => {\n      window.$('#confirmationModal').modal('hide');\n      toast.success('Пользователь удален!');\n    }, (message) => {\n      window.$('#confirmationModal').modal('hide');\n      toast.error(`Ошибка: ${message}`);\n    });\n  };\n\n  return (\n    <div className=\"uk-section\">\n      <div className=\"uk-container uk-overflow-auto\">\n        <table className=\"uk-table uk-table-responsive uk-table-small uk-table-divider uk-table-middle uk-table-justify uk-light\">\n          <thead>\n          <tr>\n            <th className=\"uk-table-shrink\">ID</th>\n            <th className=\"uk-table-shrink\">Логин</th>\n            <th className=\"uk-table-shrink\">Имя пользователя</th>\n            <th className=\"uk-table-shrink\">Фамилия пользователя</th>\n            <th className=\"uk-table-shrink\"/>\n          </tr>\n          </thead>\n          <tbody>\n          {\n            users.map(user => (\n              <tr key={user.id}>\n                <td>\n                  <Link to={`/edit-user/${user.id}`}>\n                    {user.id}\n                  </Link>\n                </td>\n                <td>\n                  <Link to={`/edit-user/${user.id}`}>\n                  {user.username}\n                  </Link>\n                </td>\n                <td>{user.first_name.length === 0 ? 'Имя пользователя не задано' : user.first_name}</td>\n                <td>{user.last_name.length === 0 ? 'Фамилия пользователя не задана' : user.last_name}</td>\n                <td>\n                  <a href=\"/\" onClick={(e) => showConfirmationModal(e, user.id)}>\n                    <span className=\"uk-margin-small-left uk-icon-link\" data-uk-icon=\"icon: trash; ratio: 1.5\"/>\n                  </a>\n                </td>\n              </tr>\n            ))\n          }\n          </tbody>\n        </table>\n      </div>\n\n      <Modal handleOnDelete={handleOnDelete}/>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchDeleteAction: (userId, onSuccess, onError) =>\n    dispatch(deleteUserById(userId, onSuccess, onError)),\n});\nexport default connect(null, mapDispatchToProps)(UsersCollection);\n\nconst Modal = ({ handleOnDelete }) => (\n  <div className=\"modal\" id=\"confirmationModal\" tabIndex=\"-1\" role=\"dialog\">\n    <div role=\"document\" className=\"modal-dialog\">\n      <div className=\"modal-content uk-background-secondary uk-align-center\">\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\">Предупреждение</h5>\n        </div>\n        <div className=\"modal-body\">\n          <p>Вы уверены, что хотите удалить пользователя ?</p>\n        </div>\n        <div className=\"modal-footer\">\n          <button type=\"button\" data-dismiss=\"modal\" className=\"uk-button uk-button-default\">\n            Нет\n          </button>\n          <button type=\"button\" onClick={handleOnDelete} data-dismiss=\"modal\" className=\"uk-button uk-button-default uk-margin-small-left\">\n            Да\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport UsersCollection from '../components/UsersCollection';\nimport { fetchAllUsers } from '../redux/actions/usersActionsCreators';\n\nconst UsersPage = ({ loading, users, dispatchFetchAllUsersAction }) => {\n\n  useEffect(() => dispatchFetchAllUsersAction(), [dispatchFetchAllUsersAction]);\n\n  return (\n    <>\n      <div className=\"uk-flex uk-flex-between@s  uk-flex-wrap\">\n        <div>\n          <h2>Список пользователей</h2>\n        </div>\n        <button className=\"uk-button uk-button-default\">\n          <Link to=\"/edit-user\" className=\"uk-link-reset\">\n            Добавить пользователя<span className=\"uk-margin-small-left uk-icon-link\" data-uk-icon=\"plus\"/>\n          </Link>\n        </button>\n      </div>\n\n      <div>\n        <div>\n          {\n            users.length > 0 ? <UsersCollection users={users}/> : (\n              <div className=\"uk-position-center\">\n                  <h2>Нет пользователей</h2>\n              </div>\n            )\n          }\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  loading: state.loading,\n  users: state.users,\n});\nconst mapDispatchToProps = dispatch => ({\n  dispatchFetchAllUsersAction: () => dispatch(fetchAllUsers()),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersPage);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { createUser, getUserById, updateUserById } from '../redux/actions/usersActionsCreators';\n\nconst EditUserPage = ({\n                        match, history, dispatchCreateUserAction,\n                        dispatchUpdateUserAction,\n                        dispatchGetUserByIdAction,\n                      }) => {\n\n  const [username, setUserName] = useState('');\n  const [first_name, setFirstName] = useState('');\n  const [last_name, setLastName] = useState('');\n  const [password, setPassword] = useState('');\n  const [is_active, setIsActive] = useState(false);\n  const [error, setError] = useState({\n    username: false,\n    password: false,\n    first_name: false,\n    last_name: false,\n  });\n  useEffect(() => {\n    const { userId } = match.params;\n    if (userId) {\n      dispatchGetUserByIdAction(userId, ({ username, first_name, last_name, password, is_active }) => {\n        setUserName(username);\n        setFirstName(first_name);\n        setLastName(last_name);\n        setPassword(password);\n        setIsActive(is_active);\n      });\n    }\n  }, [dispatchGetUserByIdAction, match.params]);\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n\n    if (isFormInvalid()) updateErrorsFlags();\n\n    else {\n      const { userId } = match.params;\n      const data = { username, first_name, last_name, password, is_active };\n      if (userId) {\n        dispatchUpdateUserAction(userId, data, () => {\n          toast.success('Пользователь успешно обновлен!');\n          history.replace('/users');\n        }, () => toast.error(`Ошибка: Данные не валидны`));\n      } else {\n        dispatchCreateUserAction(data, () => {\n          toast.success('Пользователь успешно добавлен!');\n          history.replace('/users');\n        }, () => toast.error(`Ошибка: Данные не валидны`));\n      }\n    }\n  };\n\n  const isFormInvalid = () => {\n    return (\n      !username.trim() || !password || !first_name.trim() || !last_name.trim()\n    );\n\n  };\n\n  const updateErrorsFlags = () => {\n    const errObj = {\n      username: false,\n      password: false,\n      first_name: false,\n      last_name: false,\n    };\n    if (username.length <= 1 || username.length > 150 || username === '') {\n      errObj.username = true;\n      if (username.length <= 1) {\n        errObj.usernameErrorMessage = 'Логин не может быть из 1 символа';\n      }\n      if (username.length > 150) {\n        errObj.usernameErrorMessage = 'Логин не может быть более 150 символов';\n      }\n      if (username === '') {\n        errObj.usernameErrorMessage = 'Укажите логин. В качестве символов можно использовать только буквы, цифры и @/./+/-/_';\n      }\n    }\n    if (password === '' || typeof password === 'undefined') {\n      errObj.password = true;\n      errObj.passwordErrorMessage = 'Укажите пароль. Он должен содержать в себе не более 1 цифры и не более 1 заглавной буквы и быть не менее 8 символов';\n    }\n    if (!first_name) errObj.first_name = true;\n    if (!last_name) errObj.last_name = true;\n    setError(errObj);\n  };\n\n\n  return (\n    <>\n        <div className=\"uk-flex\">\n          <h2>Добавление пользователя</h2>\n        </div>\n      <div className=\"uk-flex uk-flex-wrap\">\n        <div className=\"uk-container uk-container-small uk-flex uk-flex-column\">\n          <form onSubmit={handleOnSubmit}>\n            <div className=\"form-group\">\n              <input type=\"text\"\n                     placeholder=\"Логин\"\n                     name=\"username\"\n                     value={username}\n                     onChange={(e) => setUserName(e.target.value)}\n                     className={`uk-input ${error.username ? 'is-invalid' : ''}`}/>\n              <p className=\"invalid-feedback\">{error.usernameErrorMessage}</p>\n            </div>\n            <div className=\"form-group\">\n              <input type=\"text\"\n                     placeholder=\"Пароль\"\n                     name=\"password\"\n                     pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n                     value={password}\n                     onChange={(e) => setPassword(e.target.value)}\n                     className={`uk-input ${error.password ? 'is-invalid' : ''}`}/>\n              <p className=\"invalid-feedback\">{error.passwordErrorMessage}</p>\n            </div>\n            <div className=\"form-group\">\n              <input type=\"text\"\n                     placeholder=\"Имя\"\n                     name=\"first_name\"\n                     value={first_name}\n                     onChange={(e) => setFirstName(e.target.value)}\n                     className={`uk-input ${error.first_name ? 'is-invalid' : ''}`}/>\n              <p className=\"invalid-feedback\">Введите имя</p>\n            </div>\n            <div className=\"form-group\">\n              <input type=\"text\"\n                     placeholder=\"Фамилия\"\n                     name=\"last_name\"\n                     value={last_name}\n                     onChange={(e) => setLastName(e.target.value)}\n                     className={`uk-input ${error.last_name ? 'is-invalid' : ''}`}/>\n              <p className=\"invalid-feedback\">Введите фамилию</p>\n            </div>\n            <div className=\"uk-flex uk-flex-wrap uk-flex-between\">\n              <button className=\"uk-button uk-button-default\">\n                Сохранить\n              </button>\n              <button type=\"button\"\n                      onClick={() => history.replace('/users')}\n                      className=\"uk-button uk-button-default\">\n                Отменить\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchCreateUserAction: (data, onSuccess, onError) =>\n    dispatch(createUser(data, onSuccess, onError)),\n  dispatchUpdateUserAction: (userId, data, onSuccess, onError) =>\n    dispatch(updateUserById(userId, data, onSuccess, onError)),\n  dispatchGetUserByIdAction: (userId, onSuccess) =>\n    dispatch(getUserById(userId, onSuccess)),\n});\nexport default connect(null, mapDispatchToProps)(EditUserPage);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = ({ userName, isActive, onLogout }) => (\n\n    <div className=\"uk-flex uk-flex-between uk-background-secondary uk-light\">\n        <Link className=\"uk-navbar-item uk-logo\" to=\"/\">\n          <div>\n            <span data-uk-icon=\"icon: home; ratio: 3\"/>\n          </div>\n        </Link>\n        <div className=\"uk-flex uk-flex-column uk-margin\">\n          {isActive &&\n          <h4>\n            Добро пожаловать {userName} !\n          </h4>\n          }\n          {isActive &&\n          <button className=\"uk-button uk-button-default\" type=\"button\" onClick={onLogout}>\n            Выйти | <span className=\"uk-margin-small-left uk-icon-link\" data-uk-icon=\"sign-out\"/>\n          </button>}\n        </div>\n    </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './spinner.css';\n\nconst Spinner = ({ isLoading }) => (\n  <>\n    {\n      isLoading ? (<div id=\"spinner-fade\">\n        <div className=\"default-spinner spinner-border\" role=\"status\">\n        </div>\n      </div>) : null\n    }\n  </>\n);\n\nconst mapStateToProps = state => ({\n  isLoading: state.loading,\n});\nexport default connect(mapStateToProps)(Spinner);","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, Slide } from 'react-toastify';\n\nimport AuthPage from './pages/AuthPage.component';\nimport UsersPage from './pages/UsersPage.component';\nimport EditUserPage from './pages/EditUserPage.component';\nimport Header from './components/Header.component';\nimport Spinner from './components/spinner/Spinner.component';\nimport { logoutUser } from './redux/actions/authActionsCreators';\n\nfunction App({ user, dispatchLogoutAction }) {\n  return (\n    <>\n      <ToastContainer position=\"top-right\" autoClose={2000}\n                      hideProgressBar transition={Slide}/>\n      <Spinner/>\n      <div>\n        {!user.is_active ?\n          (<Switch>\n            <Route exact path=\"/auth\" component={AuthPage}/>\n            <Redirect to=\"/auth\"/>\n          </Switch>) : (\n            <div className=\"uk-background-secondary uk-height-viewport uk-light\"\n                 data-uk-height-viewport=\"true\">\n              <div className=\"uk-container uk-container-large uk-flex uk-flex-column uk-flex-center@s uk-flex-wrap uk-light\">\n                <Header isActive={user.is_active} userName={user.username} onLogout={dispatchLogoutAction}/>\n                <Switch>\n                  <Route exact path=\"/users\" component={UsersPage}/>\n                  <Route exact path=\"/edit-user\" component={EditUserPage}/>\n                  <Route exact path=\"/edit-user/:userId\" component={EditUserPage}/>\n                  <Redirect to=\"/users\"/>\n                </Switch>\n              </div>\n            </div>)\n        }\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchLogoutAction: () => dispatch(logoutUser()),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { RESET_USER_INFO, SET_USER_INFO } from '../constanst';\n\nconst defaultState = {\n  id: null,\n  username: null,\n  token: null,\n  is_active: false,\n};\n\nconst userInfo = localStorage.getItem('USER_INFO');\nconst INITIAL_STATE = userInfo ? JSON.parse(userInfo) : defaultState;\n\nexport default function userReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case SET_USER_INFO:\n      return { ...action.payload };\n    case RESET_USER_INFO:\n      return { ...defaultState };\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\n\nimport user from './userReducer';\nimport loading from './loadingReducer';\nimport users from './usersReducer'\n\nconst rootReducer = combineReducers({ user, loading, users });\n\nexport default rootReducer;","import { TOGGLE_LOADER } from '../constanst';\n\nexport default function loadingReducer(state = false, action) {\n  switch (action.type) {\n    case TOGGLE_LOADER:\n      return !state;\n    default:\n      return state;\n  }\n}","import { ADD_USER, REMOVE_USER, RESET_USER_INFO, SET_ALL_USERS, UPDATE_USER } from '../constanst';\n\nexport default function usersReducer(state = [], action) {\n  switch (action.type) {\n    case SET_ALL_USERS:\n      return action.payload;\n    case ADD_USER:\n      return state.concat(action.payload);\n    case REMOVE_USER:\n      return state.filter(user => user.id !== action.payload);\n    case UPDATE_USER:\n      return state.map(user => {\n        if (user.id === action.payload.userId)\n          return { ...user, ...action.payload.data };\n        else\n          return user;\n      });\n    case RESET_USER_INFO:\n      return [];\n    default:\n      return state;\n  }\n}","import axios from 'axios';\n\nimport { API, TOGGLE_LOADER } from './constanst';\nimport { logoutUser } from './actions/authActionsCreators';\n\nexport const apiMiddleware = ({ dispatch, getState }) => next => action => {\n\n  if (action.type !== API) return next(action);\n\n  dispatch({ type: TOGGLE_LOADER });\n  const BASE_URL = 'https://emphasoft-test-assignment.herokuapp.com';\n\n  const AUTH_TOKEN = getState().user.token;\n\n  if (AUTH_TOKEN){\n    axios.defaults.headers.common['Authorization'] = `Token ${AUTH_TOKEN}`;\n  }\n\n  const { url, method, success, data, postProcessSuccess, postProcessError } = action.payload;\n\n  axios({\n    method,\n    url: BASE_URL + url,\n    data: data ? data : null,\n  }).then((response) => {\n    dispatch({ type: TOGGLE_LOADER });\n    if (success) dispatch(success(response.data));\n    if (postProcessSuccess) postProcessSuccess(response.data);\n  }).catch(err => {\n    dispatch({ type: TOGGLE_LOADER });\n    if (err.response)\n      if (err.response && err.response.status === 403)\n        dispatch(logoutUser());\n    else {\n        if (postProcessError) postProcessError(err);\n    }\n  });\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport UIkit from 'uikit';\nimport Icons from 'uikit/dist/js/uikit-icons';\nimport '@fortawesome/fontawesome-free/js/all';\n\nimport * as serviceWorker from './serviceWorker'\nimport './includes/bootstrap';\nimport './index.scss';\nimport App from './App';\nimport configureStore from './redux/configureStore';\n\nconst store = configureStore();\n\nUIkit.use(Icons);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App/>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n","import { createStore, applyMiddleware, compose } from 'redux';\n\nimport rootReducer from './reducers';\nimport { apiMiddleware } from './middlewares';\n\nexport default function configureStore(initialState) {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  return createStore(rootReducer, initialState, composeEnhancers(applyMiddleware(apiMiddleware)));\n}\n"],"sourceRoot":""}